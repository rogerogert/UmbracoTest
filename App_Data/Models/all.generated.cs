using  System;
using  System.Collections.Generic;
using  System.Linq.Expressions;
using  System.Web;
using  Umbraco.Core.Models;
using  Umbraco.Core.Models.PublishedContent;
using  Umbraco.Web;
using  Umbraco.ModelsBuilder;
using  Umbraco.ModelsBuilder.Umbraco;
[assembly: PureLiveAssembly]
[assembly:ModelsBuilderAssembly(PureLive = true, SourceHash = "e4fb09b1f4b75368")]
[assembly:System.Reflection.AssemblyVersion("0.0.0.3")]


// FILE: models.generated.cs

//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.7.99
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------















namespace Umbraco.Web.PublishedContentModels
{
	/// <summary>Home</summary>
	[PublishedContentModel("home")]
	public partial class Home : PublishedContentModel, IPageBase
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "home";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Home(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Home, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Informações da companhia: Dados que ficam no rodapé sobre a companhia
		///</summary>
		[ImplementPropertyType("companyInfo")]
		public string CompanyInfo
		{
			get { return this.GetPropertyValue<string>("companyInfo"); }
		}

		///<summary>
		/// Conteúdo
		///</summary>
		[ImplementPropertyType("content")]
		public Newtonsoft.Json.Linq.JToken Content
		{
			get { return this.GetPropertyValue<Newtonsoft.Json.Linq.JToken>("content"); }
		}

		///<summary>
		/// Cor de fundo do conteúdo
		///</summary>
		[ImplementPropertyType("contentBackground")]
		public object ContentBackground
		{
			get { return this.GetPropertyValue("contentBackground"); }
		}

		///<summary>
		/// Cor do conteúdo
		///</summary>
		[ImplementPropertyType("contentColor")]
		public object ContentColor
		{
			get { return this.GetPropertyValue("contentColor"); }
		}

		///<summary>
		/// Cor do fundo do rodapé
		///</summary>
		[ImplementPropertyType("footerBackgroundColor")]
		public object FooterBackgroundColor
		{
			get { return this.GetPropertyValue("footerBackgroundColor"); }
		}

		///<summary>
		/// Cor do texto do rodapé
		///</summary>
		[ImplementPropertyType("footerTextColor")]
		public object FooterTextColor
		{
			get { return this.GetPropertyValue("footerTextColor"); }
		}

		///<summary>
		/// Cor do fundo do cabeçalho
		///</summary>
		[ImplementPropertyType("headerBackgroundColor")]
		public object HeaderBackgroundColor
		{
			get { return this.GetPropertyValue("headerBackgroundColor"); }
		}

		///<summary>
		/// Cor da borda inferior do cabeçalho
		///</summary>
		[ImplementPropertyType("headerBorderBottomColor")]
		public object HeaderBorderBottomColor
		{
			get { return this.GetPropertyValue("headerBorderBottomColor"); }
		}

		///<summary>
		/// Cor da borda superior do cabeçalho
		///</summary>
		[ImplementPropertyType("headerBorderTopColor")]
		public object HeaderBorderTopColor
		{
			get { return this.GetPropertyValue("headerBorderTopColor"); }
		}

		///<summary>
		/// Cor do link de login do menu
		///</summary>
		[ImplementPropertyType("headerLoginMenuLinkColor")]
		public object HeaderLoginMenuLinkColor
		{
			get { return this.GetPropertyValue("headerLoginMenuLinkColor"); }
		}

		///<summary>
		/// Cor do link do menu
		///</summary>
		[ImplementPropertyType("headerMenuLinkColor")]
		public object HeaderMenuLinkColor
		{
			get { return this.GetPropertyValue("headerMenuLinkColor"); }
		}

		///<summary>
		/// Cor do fundo do pré rodapé
		///</summary>
		[ImplementPropertyType("preFooterBackgroundColor")]
		public object PreFooterBackgroundColor
		{
			get { return this.GetPropertyValue("preFooterBackgroundColor"); }
		}

		///<summary>
		/// Cor do link do pré rodapé
		///</summary>
		[ImplementPropertyType("preFooterLinkColor")]
		public object PreFooterLinkColor
		{
			get { return this.GetPropertyValue("preFooterLinkColor"); }
		}

		///<summary>
		/// Cor do texto do pré rodapé
		///</summary>
		[ImplementPropertyType("preFooterTextColor")]
		public object PreFooterTextColor
		{
			get { return this.GetPropertyValue("preFooterTextColor"); }
		}

		///<summary>
		/// Mostrar logo tipo da Certisign: Mostrar logotipo da Certisign no cabeçalho
		///</summary>
		[ImplementPropertyType("showHeaderCertisignLogo")]
		public bool ShowHeaderCertisignLogo
		{
			get { return this.GetPropertyValue<bool>("showHeaderCertisignLogo"); }
		}

		///<summary>
		/// Descrição
		///</summary>
		[ImplementPropertyType("siteDescription")]
		public string SiteDescription
		{
			get { return this.GetPropertyValue<string>("siteDescription"); }
		}

		///<summary>
		/// Logo: Logo principal do Site
		///</summary>
		[ImplementPropertyType("siteLogo")]
		public IPublishedContent SiteLogo
		{
			get { return this.GetPropertyValue<IPublishedContent>("siteLogo"); }
		}

		///<summary>
		/// Título
		///</summary>
		[ImplementPropertyType("siteTitle")]
		public string SiteTitle
		{
			get { return this.GetPropertyValue<string>("siteTitle"); }
		}

		///<summary>
		/// Título do APP
		///</summary>
		[ImplementPropertyType("smartBannerAppTitle")]
		public string SmartBannerAppTitle
		{
			get { return this.GetPropertyValue<string>("smartBannerAppTitle"); }
		}

		///<summary>
		/// Smart Banner habilitado
		///</summary>
		[ImplementPropertyType("smartBannerEnabled")]
		public bool SmartBannerEnabled
		{
			get { return this.GetPropertyValue<bool>("smartBannerEnabled"); }
		}

		///<summary>
		/// Botão "vá para a loja"
		///</summary>
		[ImplementPropertyType("smartBannerGoToStore")]
		public string SmartBannerGoToStore
		{
			get { return this.GetPropertyValue<string>("smartBannerGoToStore"); }
		}

		///<summary>
		/// Preço
		///</summary>
		[ImplementPropertyType("smartBannerPrice")]
		public string SmartBannerPrice
		{
			get { return this.GetPropertyValue<string>("smartBannerPrice"); }
		}

		///<summary>
		/// Sufixo do preço Android
		///</summary>
		[ImplementPropertyType("smartBannerPriceSuffixAndroid")]
		public string SmartBannerPriceSuffixAndroid
		{
			get { return this.GetPropertyValue<string>("smartBannerPriceSuffixAndroid"); }
		}

		///<summary>
		/// Sufixo do preço Apple
		///</summary>
		[ImplementPropertyType("smartBannerPriceSuffixApple")]
		public string SmartBannerPriceSuffixApple
		{
			get { return this.GetPropertyValue<string>("smartBannerPriceSuffixApple"); }
		}

		///<summary>
		/// Cor padrão de texto
		///</summary>
		[ImplementPropertyType("textColor")]
		public object TextColor
		{
			get { return this.GetPropertyValue("textColor"); }
		}

		///<summary>
		/// Descrição
		///</summary>
		[ImplementPropertyType("seoDescription")]
		public string SeoDescription
		{
			get { return Umbraco.Web.PublishedContentModels.PageBase.GetSeoDescription(this); }
		}

		///<summary>
		/// Título
		///</summary>
		[ImplementPropertyType("seoTitle")]
		public string SeoTitle
		{
			get { return Umbraco.Web.PublishedContentModels.PageBase.GetSeoTitle(this); }
		}
	}

	// Mixin content Type 1144 with alias "pageBase"
	/// <summary>PageBase</summary>
	public partial interface IPageBase : IPublishedContent
	{
		/// <summary>Descrição</summary>
		string SeoDescription { get; }

		/// <summary>Título</summary>
		string SeoTitle { get; }
	}

	/// <summary>PageBase</summary>
	[PublishedContentModel("pageBase")]
	public partial class PageBase : PublishedContentModel, IPageBase
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "pageBase";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public PageBase(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<PageBase, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Descrição
		///</summary>
		[ImplementPropertyType("seoDescription")]
		public string SeoDescription
		{
			get { return GetSeoDescription(this); }
		}

		/// <summary>Static getter for Descrição</summary>
		public static string GetSeoDescription(IPageBase that) { return that.GetPropertyValue<string>("seoDescription"); }

		///<summary>
		/// Título
		///</summary>
		[ImplementPropertyType("seoTitle")]
		public string SeoTitle
		{
			get { return GetSeoTitle(this); }
		}

		/// <summary>Static getter for Título</summary>
		public static string GetSeoTitle(IPageBase that) { return that.GetPropertyValue<string>("seoTitle"); }
	}

	/// <summary>Folder</summary>
	[PublishedContentModel("Folder")]
	public partial class Folder : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Folder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Folder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Folder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Contents:
		///</summary>
		[ImplementPropertyType("contents")]
		public object Contents
		{
			get { return this.GetPropertyValue("contents"); }
		}
	}

	/// <summary>Image</summary>
	[PublishedContentModel("Image")]
	public partial class Image : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Image";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Image(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Image, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload image
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public Umbraco.Web.Models.ImageCropDataSet UmbracoFile
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.ImageCropDataSet>("umbracoFile"); }
		}

		///<summary>
		/// Height
		///</summary>
		[ImplementPropertyType("umbracoHeight")]
		public string UmbracoHeight
		{
			get { return this.GetPropertyValue<string>("umbracoHeight"); }
		}

		///<summary>
		/// Width
		///</summary>
		[ImplementPropertyType("umbracoWidth")]
		public string UmbracoWidth
		{
			get { return this.GetPropertyValue<string>("umbracoWidth"); }
		}
	}

	/// <summary>File</summary>
	[PublishedContentModel("File")]
	public partial class File : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "File";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public File(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<File, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload file
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public string UmbracoFile
		{
			get { return this.GetPropertyValue<string>("umbracoFile"); }
		}
	}

	/// <summary>Member</summary>
	[PublishedContentModel("Member")]
	public partial class Member : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Member";
		public new const PublishedItemType ModelItemType = PublishedItemType.Member;
#pragma warning restore 0109

		public Member(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Member, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Is Approved
		///</summary>
		[ImplementPropertyType("umbracoMemberApproved")]
		public bool UmbracoMemberApproved
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberApproved"); }
		}

		///<summary>
		/// Comments
		///</summary>
		[ImplementPropertyType("umbracoMemberComments")]
		public string UmbracoMemberComments
		{
			get { return this.GetPropertyValue<string>("umbracoMemberComments"); }
		}

		///<summary>
		/// Failed Password Attempts
		///</summary>
		[ImplementPropertyType("umbracoMemberFailedPasswordAttempts")]
		public string UmbracoMemberFailedPasswordAttempts
		{
			get { return this.GetPropertyValue<string>("umbracoMemberFailedPasswordAttempts"); }
		}

		///<summary>
		/// Last Lockout Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLockoutDate")]
		public string UmbracoMemberLastLockoutDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLockoutDate"); }
		}

		///<summary>
		/// Last Login Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLogin")]
		public string UmbracoMemberLastLogin
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLogin"); }
		}

		///<summary>
		/// Last Password Change Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastPasswordChangeDate")]
		public string UmbracoMemberLastPasswordChangeDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastPasswordChangeDate"); }
		}

		///<summary>
		/// Is Locked Out
		///</summary>
		[ImplementPropertyType("umbracoMemberLockedOut")]
		public bool UmbracoMemberLockedOut
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberLockedOut"); }
		}

		///<summary>
		/// Password Answer
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalAnswer")]
		public string UmbracoMemberPasswordRetrievalAnswer
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalAnswer"); }
		}

		///<summary>
		/// Password Question
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalQuestion")]
		public string UmbracoMemberPasswordRetrievalQuestion
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalQuestion"); }
		}
	}

}



// EOF
